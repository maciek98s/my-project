/*!
 * vue-global-var v1.0.0
 * https://github.com/mudin/vue-global-var
 *
 * @license
 * Copyright (c) 2017 mudin
 * Released under the MIT license
 * https://github.com/mudin/vue-global-var/blob/master/LICENSE
 */
'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var Vuex = _interopDefault(require('vuex'));

var VueGlobalVariable = {
    install: function (Vue, options) {
        options = options || {};
        // const store = options.store || {state:{}}
        Vue.use(Vuex);
        var store = new Vuex.Store({ state: {} });
        var globals = options.globals || {};
        Object.keys(globals).forEach(function (key) {
            window["" + key] = globals[key];
            Vue.set(store.state, key, globals[key]);
        });
        var computed = {};
        Object.keys(globals).forEach(function (key) {
            computed["" + key] = function () { return globals[key]; };
        });
        Vue.mixin({
            computed: computed
        });
    }
};

module.exports = VueGlobalVariable;
